swagger: '2.0'
info:
  version:  1.0.0
  title: RESTful接口
  description: RESTful API
  termsOfService: ""
  contact:
    name: 付红竹
    url: http://mi1024.top
    email: rootfuhz@163.com

host: localhost:8520
basePath: /api/v1
schemes:
  - https
  - http

consumes:
  - application/json
produces:
  - application/json

securityDefinitions:
  APIToken:
    type: apiKey
    in: header
    name: X-API-TOKEN
security:
- APIToken: []


paths:
  /jpush/msg:
    post:
      tags:
        - 激光推送消息
      summary: 推送消息到APP
      description:
      parameters:
        - name: jpush
          in: body
          description: 推送消息
          schema:
            type: object
            properties:
              accounts:
                description: 用户账号
                type: string
              contents:
                description: 推送内容
                type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ApiResponse'
        400:
          description: Persons couldn't have been created.


  /persons:
    get:
      summary: Get some persons
      description: Returns a list containing all persons
      parameters:
        - name: pageSize
          in: query
          description: Number of persons returned
          type: integer
        - name: pageNumber
          in: query
          description: Page number
          type: integer
      responses:
        200:
          description: A list of Person
          schema:
            $ref: '#/definitions/ApiResponse'


    post:
      summary: Creates a person
      description: Adds a new person to the persons list.
      parameters:
        - name: person
          in: body
          description: The person to create.
          schema:
            $ref: '#/definitions/Person'
      responses:
        204:
          description: Persons succesfully created.
          schema:
            $ref: '#/definitions/ApiResponse'
        400:
          description: Persons couldn't have been created.


  /persons/{username}:
    get:
      summary: Gets a person
      description: Returns a single person for its username
      parameters:
        - name: username
          in: path
          required: true
          description: The person's username
          type: string
      responses:
        200:
          description: A Person
          schema:
            $ref: '#/definitions/ApiResponse'
        404:
          description: The Person does not exists.


definitions:
  Person:
    required:
      - username
    properties:
      firstName:
        type: string
      lastName:
        type: string
      username:
        type: string
  Persons:
    type: array
    items:
      $ref: '#/definitions/Person'
  Error:
    properties:
      code:
        type: string
      message:
        type: string
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
        format: int32
      data:
        type: string
      message:
        type: string

  ErrorResponse:
    type: object
    properties:
      status:
        type: integer
        format: int32
      message:
        type: string
responses:
  Standard500ErrorResponse:
    description: An unexpected error occured
    schema:
      $ref: '#/definitions/Error'
